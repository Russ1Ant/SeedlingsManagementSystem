/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.6
 * Generated at: 2021-09-30 14:42:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class addCustomer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>page 0</title>\n");
      out.write("        <link href=\"bootstrap/css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\"/>\n");
      out.write("        <link href=\"bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\"/>\n");
      out.write("        ");
 
// <link rel="stylesheet" href="styles.css">

      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("    .style1{\n");
      out.write("        float: none;\n");
      out.write("        margin-left: 100px \n");
      out.write("            \n");
      out.write("    }\n");
      out.write("    body{\n");
      out.write("        background-color: lightgreen;\n");
      out.write("        background-image: linear-gradient(rgba(4,9,30,0.7),rgba(1,2,30,0.7)),url(images/apple1.png);\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("    .container p{\n");
      out.write("        margin-top: 45px;\n");
      out.write("        margin-left: 10px;\n");
      out.write("        color:#fff;\n");
      out.write("        font-size: 60px \n");
      out.write("        \n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"container align-content-center\">\n");
      out.write("            <p>Add new Customer</p>\n");
      out.write("        <br>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-sm-4\">\n");
      out.write("                <form method=\"post\" action=\"#\">\n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">First Name</label>\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" name=\"fName\" id=\"fName\" required>\n");
      out.write("                    </div>\n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">Middle Name</label>\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"Middle Name\" name=\"middleName\" id=\"middleName\" required>\n");
      out.write("                    </div>\n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">Last Name</label>\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" name=\"lastName\" id=\"lastName\" required>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                 \n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">National ID number </label>\n");
      out.write("                        <input type=\"number\" class=\"form-control\" placeholder=\"ID number\" id=\"nationalID\" name=\"nationalID\" required>\n");
      out.write("                    </div>\n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">Phone number </label>\n");
      out.write("                        <input type=\"number\" class=\"form-control\" placeholder=\"Phone number \" id=\"phoneNumber\" name=\"phoneNumber\" required>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                                        <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">Email Address </label>\n");
      out.write("                        <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" id=\"email\" name=\"email\" required>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                                 <div align=\"left\">\n");
      out.write("                        <label class=\"form-label\">Address </label>\n");
      out.write("                     <input type=\"text\" class=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" required>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                   \n");
      out.write("                    \n");
      out.write("                  \n");
      out.write("                    <br>\n");
      out.write("                    <div align=\"left\">\n");
      out.write("                        <input type=\"submit\" class=\"btn btn-info\" id=\"submit\" name=\"submit\" >\n");
      out.write("                        <input type=\"reset\" class=\"btn btn-warning\" id=\"reset\" name=\"reset\">\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        </<div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
